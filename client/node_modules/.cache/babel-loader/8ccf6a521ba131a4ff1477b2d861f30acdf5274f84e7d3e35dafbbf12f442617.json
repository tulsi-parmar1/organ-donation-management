{"ast":null,"code":"import { getAllOrder, deleteOrder } from \"./FetchApi\";\nexport const fetchData = async dispatch => {\n  dispatch({\n    type: \"loading\",\n    payload: true\n  });\n  let responseData = await getAllOrder();\n  setTimeout(() => {\n    if (responseData && responseData.Orders) {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders\n      });\n      dispatch({\n        type: \"loading\",\n        payload: false\n      });\n    }\n  }, 1000);\n};\n\n/* This method call the editmodal & dispatch category context */\nexport const editOrderReq = (oId, type, status, dispatch) => {\n  if (type) {\n    console.log(\"click update\");\n    dispatch({\n      type: \"updateOrderModalOpen\",\n      oId: oId,\n      status: status\n    });\n  }\n};\nexport const deleteOrderReq = async (oId, dispatch) => {\n  let responseData = await deleteOrder(oId);\n  console.log(responseData);\n  if (responseData && responseData.success) {\n    fetchData(dispatch);\n  }\n};\n\n/* Filter All Order */\nexport const filterOrder = async (type, data, dispatch, dropdown, setDropdown) => {\n  let responseData = await getAllOrder();\n  if (responseData && responseData.Orders) {\n    let newData;\n    if (type === \"All\") {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders\n      });\n      setDropdown(!dropdown);\n    } else if (type === \"Not processed\") {\n      newData = responseData.Orders.filter(item => item.status === \"Not processed\");\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: newData\n      });\n      setDropdown(!dropdown);\n    } else if (type === \"Under Scrutiny\") {\n      newData = responseData.Orders.filter(item => item.status === \"Processing\");\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: newData\n      });\n      setDropdown(!dropdown);\n    } else if (type === \"Request Accepted\") {\n      newData = responseData.Orders.filter(item => item.status === \"Shipped\");\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: newData\n      });\n      setDropdown(!dropdown);\n    } else if (type === \"Expired\") {\n      newData = responseData.Orders.filter(item => item.status === \"Delivered\");\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: newData\n      });\n      setDropdown(!dropdown);\n    } else if (type === \"Cancelled\") {\n      newData = responseData.Orders.filter(item => item.status === \"Cancelled\");\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: newData\n      });\n      setDropdown(!dropdown);\n    }\n  }\n};","map":{"version":3,"names":["getAllOrder","deleteOrder","fetchData","dispatch","type","payload","responseData","setTimeout","Orders","editOrderReq","oId","status","console","log","deleteOrderReq","success","filterOrder","data","dropdown","setDropdown","newData","filter","item"],"sources":["C:/Personal Disc/KSHITIJ/Webdev_learn/OrganEase-main/OrganEase-main/client/src/components/admin/orders/Actions.js"],"sourcesContent":["import { getAllOrder, deleteOrder } from \"./FetchApi\";\n\nexport const fetchData = async (dispatch) => {\n  dispatch({ type: \"loading\", payload: true });\n  let responseData = await getAllOrder();\n  setTimeout(() => {\n    if (responseData && responseData.Orders) {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders,\n      });\n      dispatch({ type: \"loading\", payload: false });\n    }\n  }, 1000);\n};\n\n/* This method call the editmodal & dispatch category context */\nexport const editOrderReq = (oId, type, status, dispatch) => {\n  if (type) {\n    console.log(\"click update\");\n    dispatch({ type: \"updateOrderModalOpen\", oId: oId, status: status });\n  }\n};\n\nexport const deleteOrderReq = async (oId, dispatch) => {\n  let responseData = await deleteOrder(oId);\n  console.log(responseData);\n  if (responseData && responseData.success) {\n    fetchData(dispatch);\n  }\n};\n\n/* Filter All Order */\nexport const filterOrder = async (\n  type,\n  data,\n  dispatch,\n  dropdown,\n  setDropdown\n) => {\n  let responseData = await getAllOrder();\n  if (responseData && responseData.Orders) {\n    let newData;\n    if (type === \"All\") {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders,\n      });\n      setDropdown(!dropdown);\n    } else if (type === \"Not processed\") {\n      newData = responseData.Orders.filter(\n        (item) => item.status === \"Not processed\"\n      );\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    } else if (type === \"Under Scrutiny\") {\n      newData = responseData.Orders.filter(\n        (item) => item.status === \"Processing\"\n      );\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    } else if (type === \"Request Accepted\") {\n      newData = responseData.Orders.filter((item) => item.status === \"Shipped\");\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    } else if (type === \"Expired\") {\n      newData = responseData.Orders.filter(\n        (item) => item.status === \"Delivered\"\n      );\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    } else if (type === \"Cancelled\") {\n      newData = responseData.Orders.filter(\n        (item) => item.status === \"Cancelled\"\n      );\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}